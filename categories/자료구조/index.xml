<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>자료구조 on 배하람 블로그</title>
    <link>https://baeharam.github.io/categories/%EC%9E%90%EB%A3%8C%EA%B5%AC%EC%A1%B0/</link>
    <description>Recent content in 자료구조 on 배하람 블로그</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko-KR</language>
    <managingEditor>hisfedev@gmail.com (배하람)</managingEditor>
    <webMaster>hisfedev@gmail.com (배하람)</webMaster>
    <lastBuildDate>Fri, 12 Jul 2019 11:25:43 +0900</lastBuildDate>
    
	<atom:link href="https://baeharam.github.io/categories/%EC%9E%90%EB%A3%8C%EA%B5%AC%EC%A1%B0/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>[자료구조] 해시 테이블(Hash Table)</title>
      <link>https://baeharam.github.io/posts/data-structure/hash-table/</link>
      <pubDate>Fri, 12 Jul 2019 11:25:43 +0900</pubDate>
      <author>hisfedev@gmail.com (배하람)</author>
      <guid>https://baeharam.github.io/posts/data-structure/hash-table/</guid>
      <description>해싱이란? (Hashing) 해싱이란 임의의 길이의 값을 해시함수(Hash Function)를 사용하여 고정된 크기의 값으로 변환하는 작업을 말한다.
그림 출처
위 그림에서 dog 라는 문자열을 해시함수를 이용해 새로운 값으로 변환한 것을 볼 수 있는데 이 경우엔 암호화에 쓰이는 해시 알고리즘인 MD5를 사용한 것이다. 하지만 여기서 다룰 것은 암호화에 쓰인 방식이 아닌 자료구조로 사용하고자 하는 해시 테이블을 다루기 때문에 정수값으로 변환되는 해시 알고리즘을 사용한다. 해싱을 사용하여 데이터를 저장하는 자료구조를 해시 테이블(Hash Table)이라고 하며 이는 기존 자료구조인 이진탐색트리나 배열에 비해서 굉장히 빠른 속도로 탐색, 삽입, 삭제를 할 수 있기 때문에 컴퓨터 공학도라면 반드시 알아야 한다.</description>
    </item>
    
    <item>
      <title>[자료구조] 힙(Heap)</title>
      <link>https://baeharam.github.io/posts/data-structure/heap/</link>
      <pubDate>Fri, 12 Jul 2019 10:48:45 +0900</pubDate>
      <author>hisfedev@gmail.com (배하람)</author>
      <guid>https://baeharam.github.io/posts/data-structure/heap/</guid>
      <description>힙의 정의 힙(Heap)이란 완전 이진 트리의 한 종류로 최댓값이나 최솟값을 빠르게 찾아내기 위해 고안된 자료구조이다. 힙의 각 노드는 키(Key)라는 값으로 구성되며 부모노드와 자식노드와의 관계는 다음이 성립한다.
 A가 부모노드, B가 자식노드일 경우 A의 키 값과 B의 키 값에는 대소관계가 주어진다.  힙은 자식 노드에 따라 여러가지 종류로 구분되지만 대부분 자식 노드 2개를 갖는 이진 힙(Binary Heap)을 사용하며 우선순위 큐(Priority Queue)의 구현체로 이용되거나 힙 정렬(Heap Sort)에 이용된다. 우선순위 큐가 사용되는 알고리즘으로는 최단경로를 찾는 다익스트라(Dijkstra) 알고리즘이 존재한다.</description>
    </item>
    
  </channel>
</rss>